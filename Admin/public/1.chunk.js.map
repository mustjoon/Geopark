{"version":3,"file":"1.chunk.js","sources":["webpack:///./src/app/secure/map/Modal/modal.component.html","webpack:///./src/app/secure/map/map.component.html","webpack:///./src/app/secure/polku/polku.component.html","webpack:///./src/app/secure/secure.component.html","webpack:///./src/app/secure/map/map.component.css?9259","webpack:///./src/app/secure/polku/polku.component.css?9c12","webpack:///./src/app/secure/secure.component.css?0572","webpack:///./src/app/secure/index.ts","webpack:///./src/app/googleMapsService.ts?2ddf","webpack:///./src/app/secure/map/googleMaps.service.ts?16b3","webpack:///./src/app/secure/map/map.component.ts","webpack:///./src/app/secure/map/Modal/modal.component.ts","webpack:///./src/app/secure/no-content/no-content.component.ts","webpack:///./src/app/secure/polku/polku.component.ts","webpack:///./src/app/secure/secure.component.ts","webpack:///./src/app/secure/map/map.module.ts","webpack:///./src/app/secure/map/map.routes.ts","webpack:///./src/app/secure/secure.module.ts","webpack:///./src/app/secure/secure.routes.ts","webpack:///./src/app/secure/map/map.component.css","webpack:///./src/app/secure/polku/polku.component.css","webpack:///./src/app/secure/secure.component.css"],"sourcesContent":["module.exports = \"\\r\\n<div   (hide)=\\\"onDialogHide()\\\" >\\r\\n  <h3 class=\\\"mdl-dialog__title\\\">App Login</h3>\\r\\n\\r\\n  <div class=\\\"mdl-dialog__content\\\">\\r\\n    <mdl-textfield  type=\\\"text\\\" label=\\\"Username\\\" floating-label></mdl-textfield>\\r\\n    <br/>\\r\\n    <mdl-textfield type=\\\"password\\\" label=\\\"Password\\\"  floating-label></mdl-textfield>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-dialog__actions\\\">\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mdl-button (click)=\\\"login()\\\"\\r\\n    \\r\\n      mdl-button-type=\\\"raised\\\"\\r\\n      mdl-colored=\\\"primary\\\" mdl-ripple>Login</button>\\r\\n      <button\\r\\n      type=\\\"button\\\"\\r\\n      mdl-button (click)=\\\"closeDialog()\\\"\\r\\n      mdl-button-type=\\\"raised\\\"\\r\\n      mdl-colored=\\\"primary\\\" mdl-ripple>Cancel</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/secure/map/Modal/modal.component.html\n// module id = 1008\n// module chunks = 1","module.exports = \"<div id=\\\"googleMap\\\" style=\\\"width:500px;height:380px;\\\"></div>\\r\\n  \\r\\n<!--<ul>\\r\\n    <li class=\\\"text\\\" *ngFor=\\\"let item of items | async\\\">\\r\\n        {{item.$key}} {{item.info}}  {{item.lat}}  {{item.lng}}\\r\\n    </li>\\r\\n</ul>-->\\r\\n\\r\\n<div> {{ guideTxt }} </div>\\r\\n<!-- Colored raised button -->\\r\\n<button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\\\" (click)=\\\"UusiKohde('Lis채채 uusi kohde.')\\\">\\r\\n  Tee uusi kohde\\r\\n</button>\\r\\n\\r\\n<button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\\\" (click)=\\\"FinalSave()\\\">\\r\\n  Tallenna kohteet\\r\\n</button>\\r\\n\\r\\n<button style=\\\"display:none\\\" id=\\\"open\\\" #editUserButton mdl-button mdl-button-type=\\\"raised\\\" mdl-colored=\\\"primary\\\"\\r\\n        mdl-ripple (click)=\\\"editUserDialog.show()\\\">Edit User Dialog</button>\\r\\n\\r\\n\\r\\n\\r\\n<mdl-dialog #editUserDialog\\r\\n            [mdl-dialog-config]=\\\"{\\r\\n              clickOutsideToClose: true,\\r\\n              styles:{'width': '300px'},\\r\\n              isModal:true,\\r\\n              openFrom: editUserButton,\\r\\n              enterTransitionDuration: 400,\\r\\n              leaveTransitionDuration: 400}\\\"\\r\\n            (show)=\\\"onDialogShow(dialogRef)\\\"\\r\\n            (hide)=\\\"onDialogHide()\\\">\\r\\n  <h3 class=\\\"mdl-dialog__title\\\">Anna pisteen tiedot</h3>\\r\\n  <div class=\\\"mdl-dialog__content\\\">\\r\\n\\r\\n  <!-- SELECT -->\\r\\n  <label for=\\\"singleSelect\\\"> Kategoriat: </label><br>\\r\\n  <select class=\\\"selectbox\\\" [(ngModel)]=\\\"target_category\\\" >\\r\\n    <option *ngFor=\\\"let c of categories  | async\\\" value=\\\"{{c.$value}}\\\" >{{c.$value}}</option>\\r\\n  </select>\\r\\n\\r\\n    <mdl-textfield type=\\\"text\\\" id=\\\"nameasd\\\" label=\\\"Nimi\\\" [(ngModel)]=\\\"target_name\\\" floating-label autofocus></mdl-textfield>\\r\\n    <mdl-textfield type=\\\"text\\\" label=\\\"Lis채info\\\" [(ngModel)]=\\\"target_info\\\" floating-label autofocus></mdl-textfield>\\r\\n    <input type=\\\"file\\\" id=\\\"uploadthisFILE\\\" class=\\\"uploadthisFILE\\\" label=\\\"Kuvalinkki\\\"  (change)=\\\"onChange($event)\\\"  floating-label autofocus>\\r\\n\\r\\n    <input type=\\\"file\\\" label=\\\"Videolinkki\\\" [(ngModel)]=\\\"target_video\\\"   (change)=\\\"onVideoChange($event)\\\" floating-label autofocus>\\r\\n    <mdl-textfield type=\\\"text\\\" label=\\\"Esikatselu et채isyys\\\" [(ngModel)]=\\\"target_previewDistance\\\" floating-label autofocus></mdl-textfield>\\r\\n    <mdl-textfield type=\\\"text\\\" label=\\\"Latitude\\\" [(ngModel)]=\\\"target_latitude\\\" floating-label autofocus disabled=\\\"true\\\"></mdl-textfield>\\r\\n    <mdl-textfield type=\\\"text\\\" label=\\\"Longitude\\\" [(ngModel)]=\\\"target_longitude\\\" floating-label autofocus disabled=\\\"true\\\"></mdl-textfield>\\r\\n  </div>\\r\\n  <div class=\\\"mdl-dialog__actions\\\">\\r\\n    <button mdl-button (click)=\\\"SaveNewLocationInfo()\\\" mdl-button-type=\\\"raised\\\" mdl-colored=\\\"primary\\\" mdl-ripple>Save</button>\\r\\n    <button id=\\\"closeBtn\\\" mdl-button (click)=\\\"editUserDialog.close()\\\" mdl-ripple>Cancel</button>\\r\\n  </div>\\r\\n</mdl-dialog>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/secure/map/map.component.html\n// module id = 1009\n// module chunks = 1","module.exports = \"  <div class=\\\"demo-card-wide mdl-card mdl-shadow--2dp\\\" style=\\\"width:25vw;height:90vh;float: left;\\\">\\r\\n    <!-- OTSIKKO -->\\r\\n    <mdl-textfield id=\\\"route_name\\\" type=\\\"text\\\" label=\\\"Reitin nimi\\\" [(ngModel)]=\\\"route_name\\\" floating-label autofocus></mdl-textfield>\\r\\n\\r\\n  <label id=\\\"label_category\\\" for=\\\"singleSelect\\\"> Kategoriat: </label>\\r\\n    <select id=\\\"select_category\\\" class=\\\"selectbox\\\" [(ngModel)]=\\\"route_category\\\" >\\r\\n    <option *ngFor=\\\"let c of categories  | async\\\" value=\\\"{{c.$value}}\\\" >{{c.$value}}</option>\\r\\n  </select>\\r\\n  \\r\\n    <!-- INFO -->\\r\\n    <mdl-textfield rows=\\\"10\\\" id=\\\"mdl-textfield__input\\\" [(ngModel)]=\\\"route_info\\\" type=\\\"text\\\" label=\\\"Info (valinnainen)\\\" floating-label autofocus>\\r\\n    </mdl-textfield>\\r\\n\\r\\n    <!-- VALITUT KOHTEET JA POISTO NAPIT -->\\r\\n    <ul class=\\\"demo-list-three mdl-list\\\" style=\\\"height:50vh;overflow-y:scroll;\\\">\\r\\n      <li class=\\\"mdl-list__item mdl-list__item--three-line\\\" *ngFor=\\\"let r of route; let i = index\\\">\\r\\n      <span class=\\\"mdl-list__item-primary-content\\\">\\r\\n\\r\\n        <i class=\\\"material-icons mdl-list__item-avatar\\\"  [ngStyle]=\\\"{\\r\\n        'background-image': 'url(' + r.img + ')', \\r\\n        'background-size' : 'cover'}\\\"></i>\\r\\n\\r\\n        <span>{{r.name}}</span>\\r\\n        <span class=\\\"mdl-list__item-text-body\\\">\\r\\n        {{r.info}}\\r\\n        </span>\\r\\n      </span>\\r\\n      <button class=\\\"mdl-button mdl-js-button mdl-button--icon mdl-button--colored\\\" (click)=\\\"RemoveSpotFromRoute(i)\\\">\\r\\n        <i id=\\\"remove\\\" class=\\\"material-icons\\\">remove</i>\\r\\n      </button>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <!-- TALLENNA NAPPI -->\\r\\n    <div class=\\\"mdl-card__actions mdl-card--border\\\" (click)=\\\"SaveRoute()\\\">\\r\\n      <a class=\\\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\\\">\\r\\n        Tallenna reitti\\r\\n      </a>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"googleMap\\\" style=\\\"width:74vw;height:90vh;float:left;\\\"></div>\\r\\n\\r\\n  <div> {{ guideTxt }} </div>\\r\\n\\r\\n  <button style=\\\"display:none\\\" id=\\\"open\\\" #editUserButton mdl-button mdl-button-type=\\\"raised\\\" mdl-colored=\\\"primary\\\"\\r\\n        mdl-ripple (click)=\\\"editUserDialog.show()\\\">Edit User Dialog</button>\\r\\n\\r\\n<!-- \\r\\n  <br>\\r\\n  <br>\\r\\n\\r\\n  CATEGORY\\r\\n  <label for=\\\"singleSelect\\\"> Kategoriat: </label><br>\\r\\n  <select class=\\\"selectbox\\\" [(ngModel)]=\\\"activeCategory\\\" (change)=\\\"CategoryChange()\\\">\\r\\n    <option *ngFor=\\\"let c of categories  | async\\\" value=\\\"{{c.$value}}\\\" >{{c.$value}}</option>\\r\\n  </select>-->\\r\\n\\r\\n  <!-- SPOTS \\r\\n  <label for=\\\"singleSelect\\\"> Kohteet: </label><br>\\r\\n  <select class=\\\"selectbox\\\" [(ngModel)]=\\\"lastSelectedSpot\\\" (change)=\\\"SpotSelect()\\\">\\r\\n    <option *ngFor=\\\"let s of spots  | async\\\" value=\\\"{{s.$key}}\\\" >{{s.$key}}</option>\\r\\n  </select>\\r\\n-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/secure/polku/polku.component.html\n// module id = 1010\n// module chunks = 1","module.exports = \"<div class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-header\\\">\\r\\n  <header class=\\\"mdl-layout__header\\\">\\r\\n    <div class=\\\"mdl-layout__header-row\\\">\\r\\n      <!-- Title -->\\r\\n      <span class=\\\"mdl-layout-title\\\">Title</span>\\r\\n      <!-- Add spacer, to align navigation to the right -->\\r\\n      <div class=\\\"mdl-layout-spacer\\\"></div>\\r\\n      <!-- Navigation. We hide it in small screens. -->\\r\\n      <nav class=\\\"mdl-navigation mdl-layout--large-screen-only\\\">\\r\\n        <a class=\\\"mdl-navigation__link\\\" [routerLink]=\\\" ['./map'] \\\" routerLinkActive=\\\"active\\\">\\r\\n          Kartta\\r\\n        </a>\\r\\n        <a class=\\\"mdl-navigation__link\\\" [routerLink]=\\\" ['./polku'] \\\" routerLinkActive=\\\"active\\\">\\r\\n          Reitti\\r\\n        </a>\\r\\n      </nav>\\r\\n    </div>\\r\\n  </header>\\r\\n  <div class=\\\"mdl-layout__drawer\\\">\\r\\n    <span class=\\\"mdl-layout-title\\\">Title</span>\\r\\n    <nav class=\\\"mdl-navigation\\\">\\r\\n      <a class=\\\"mdl-navigation__link\\\" [routerLink]=\\\" ['./map'] \\\" routerLinkActive=\\\"active\\\">\\r\\n        Kartta\\r\\n      </a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" [routerLink]=\\\" ['./polku'] \\\" routerLinkActive=\\\"active\\\">\\r\\n        Reitti\\r\\n      </a>\\r\\n    </nav>\\r\\n  </div>\\r\\n  <main class=\\\"mdl-layout__content\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n       <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/secure/secure.component.html\n// module id = 1011\n// module chunks = 1","\n        var result = require(\"!!./../../../../node_modules/css-loader/index.js!./map.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/secure/map/map.component.css\n// module id = 1018\n// module chunks = 1","\n        var result = require(\"!!./../../../../node_modules/css-loader/index.js!./polku.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/secure/polku/polku.component.css\n// module id = 1019\n// module chunks = 1","\n        var result = require(\"!!./../../../node_modules/css-loader/index.js!./secure.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/secure/secure.component.css\n// module id = 1020\n// module chunks = 1","export { SecureModule } from './secure.module';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/index.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class googleMapsServiceFinal {\r\n\r\n  public initMap(){\r\n    var mapProp = {\r\n        center: new google.maps.LatLng(51.508742, -0.120850),\r\n        zoom: 7,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    };\r\n\r\n    let map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\r\n    return map;\r\n  }\r\n\r\n\r\n  public addMarkerToMap(map,object){\r\n   // let func = func;\r\n    map.addListener(\"click\",function(e){\r\n      object.addMarker(e.latLng);\r\n    });\r\n  }\r\n\r\n  public showInfoWindow(){\r\n\r\n  }\r\n\r\n  public createRouteAddMarker(key,info){\r\n    var marker = new google.maps.Marker({\r\n                            id: key,\r\n                            category: info.$key,\r\n                            name: info[key].name,\r\n                            img: info[key].img,\r\n                            info: info[key].info,\r\n                            position: new google.maps.LatLng(info[key].latitude, info[key].longitude)\r\n                        });\r\n    return marker;\r\n\r\n                        \r\n           \r\n  }\r\n\r\n  public createRouteAddInfoWindow(key,info){\r\n    let infowindow = new google.maps.InfoWindow({\r\n                            content:'<div id=\"infowindow\"  class=\"demo-card-wide mdl-card mdl-shadow--2dp\">'+\r\n                                    '<div style=\"height: 176px; background: url('+info[key].img+') center / cover\"  class=\"mdl-card__title\">'+\r\n                                    '<h2 style=\"background-color:white;\" id=\"infowindow_title\" class=\"mdl-card__title-text\">'+ info[key].name +'</h2>'+\r\n                                    '</div>'+\r\n                                    '<div id=\"infowindow_text\" class=\"mdl-card__supporting-text\">'+  info[key].info + '</div>'+\r\n                                    '<div id=\"btn_addToRoute\" class=\"mdl-card__actions mdl-card--border\">'+\r\n                                    '<a class=\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\">'+\r\n                                    'Lis채채 reittiin'+\r\n                                    '</a>'+\r\n                                    '</div>'+\r\n                                    '</div>'\r\n                        });\r\n    return infowindow;\r\n  }\r\n\r\n  public centerMapToLocation(map){\r\n     // Try HTML5 geolocation.\r\n        if (navigator.geolocation) {\r\n          navigator.geolocation.getCurrentPosition(function(position) {\r\n            var pos = {\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude\r\n            };\r\n\r\n            map.setCenter(pos);\r\n          });\r\n        } else {\r\n          // Browser doesn't support Geolocation\r\n            var infoWindow = new google.maps.InfoWindow({map: map});\r\n            handleLocationError(false, infoWindow, map.getCenter());\r\n        }\r\n      \r\n\r\n        function handleLocationError(browserHasGeolocation, infoWindow, pos) {\r\n        infoWindow.setPosition(pos);\r\n        infoWindow.setContent(browserHasGeolocation ?\r\n                              'Error: The Geolocation service failed.' :\r\n                              'Error: Your browser doesn\\'t support geolocation.');\r\n      }\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\r\n\tpublic getSLPlayer(map){\r\n      return new google.maps.ImageMapType({\r\n                      getTileUrl: function (coord, zoom) {\r\n\r\n                          var proj = map.getProjection();\r\n                          var zfactor = Math.pow(2, zoom);\r\n                          // get Long Lat coordinates\r\n                          var top = proj.fromPointToLatLng(new google.maps.Point(coord.x * 256 / zfactor, coord.y * 256 / zfactor));\r\n                          var bot = proj.fromPointToLatLng(new google.maps.Point((coord.x + 1) * 256 / zfactor, (coord.y + 1) * 256 / zfactor));\r\n\r\n                          //corrections for the slight shift of the SLP (mapserver)\r\n                          var deltaX = 0.0013;\r\n                          var deltaY = 0.00058;\r\n\r\n                          //create the Bounding box string\r\n                          var bbox =     (top.lng() + deltaX) + \",\" +\r\n                                       (bot.lat() + deltaY) + \",\" +\r\n                                       (bot.lng() + deltaX) + \",\" +\r\n                                       (top.lat() + deltaY);\r\n\r\n                          //base WMS URL\r\n                          var url = \"http://tiles.kartat.kapsi.fi/peruskartta?\";\r\n                          url += \"&REQUEST=GetMap\"; //WMS operation\r\n                          url += \"&SERVICE=WMS\";    //WMS service\r\n                          url += \"&VERSION=1.1.1\";  //WMS version  \r\n                        //  url += \"&LAYERS=\" + \"typologie,hm2003\"; //WMS layers\r\n                          url += \"&FORMAT=image/png\" ; //WMS format\r\n                          url += \"&BGCOLOR=0xFFFFFF\";  \r\n                          url += \"&TRANSPARENT=TRUE\";\r\n                          url += \"&SRS=EPSG:4326\";     //set WGS84 \r\n                          url += \"&BBOX=\" + bbox;      // set bounding box\r\n                          url += \"&WIDTH=256\";         //tile size in google\r\n                          url += \"&HEIGHT=256\";\r\n                          url += \"&LAYERS=peruskartta\";\r\n\r\n                          return url;                 // return URL for the tile\r\n\r\n                      },\r\n                      tileSize: new google.maps.Size(256, 256),\r\n                      isPng: true\r\n                  });\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/googleMapsService.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class googleMapsService {\r\n\t\r\n\tpublic getSLPlayer(map){\r\n      return new google.maps.ImageMapType({\r\n                      getTileUrl: function (coord, zoom) {\r\n\r\n                          var proj = map.getProjection();\r\n                          var zfactor = Math.pow(2, zoom);\r\n                          // get Long Lat coordinates\r\n                          var top = proj.fromPointToLatLng(new google.maps.Point(coord.x * 256 / zfactor, coord.y * 256 / zfactor));\r\n                          var bot = proj.fromPointToLatLng(new google.maps.Point((coord.x + 1) * 256 / zfactor, (coord.y + 1) * 256 / zfactor));\r\n\r\n                          //corrections for the slight shift of the SLP (mapserver)\r\n                          var deltaX = 0.0013;\r\n                          var deltaY = 0.00058;\r\n\r\n                          //create the Bounding box string\r\n                          var bbox =     (top.lng() + deltaX) + \",\" +\r\n                                       (bot.lat() + deltaY) + \",\" +\r\n                                       (bot.lng() + deltaX) + \",\" +\r\n                                       (top.lat() + deltaY);\r\n\r\n                          //base WMS URL\r\n                          var url = \"http://tiles.kartat.kapsi.fi/peruskartta?\";\r\n                          url += \"&REQUEST=GetMap\"; //WMS operation\r\n                          url += \"&SERVICE=WMS\";    //WMS service\r\n                          url += \"&VERSION=1.1.1\";  //WMS version  \r\n                        //  url += \"&LAYERS=\" + \"typologie,hm2003\"; //WMS layers\r\n                          url += \"&FORMAT=image/png\" ; //WMS format\r\n                          url += \"&BGCOLOR=0xFFFFFF\";  \r\n                          url += \"&TRANSPARENT=TRUE\";\r\n                          url += \"&SRS=EPSG:4326\";     //set WGS84 \r\n                          url += \"&BBOX=\" + bbox;      // set bounding box\r\n                          url += \"&WIDTH=256\";         //tile size in google\r\n                          url += \"&HEIGHT=256\";\r\n                          url += \"&LAYERS=peruskartta\";\r\n\r\n                          return url;                 // return URL for the tile\r\n\r\n                      },\r\n                      tileSize: new google.maps.Size(256, 256),\r\n                      isPng: true\r\n                  });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/map/googleMaps.service.ts","import {AngularFire, FirebaseApp, FirebaseListObservable} from 'angularfire2';\r\nimport {googleMapsService} from './googleMaps.service';\r\nimport {googleMapsServiceFinal} from '../../googleMapsService';\r\nimport { Overlay } from 'angular2-modal';\r\nimport {ModalComponent} from './Modal/modal.component';\r\n\r\nimport { MdlDialogService,\r\n  MdlDialogReference,MdlSnackbarService,IOpenCloseRect } from 'angular2-mdl';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Inject ,\r\n  ViewContainerRef \r\n} from '@angular/core';\r\n\r\nimport {\r\n  AgmCoreModule\r\n} from 'angular2-google-maps/core';\r\n/*\r\n * We're loading this component asynchronously\r\n * We are using some magic with es6-promise-loader that will wrap the module with a Promise\r\n * see https://github.com/gdi2290/es6-promise-loader for more info\r\n */\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'map',\r\n  template: require('./map.component.html'),\r\n  styles: [require('./map.component.css')],\r\n  providers: [ModalComponent,googleMapsService,googleMapsServiceFinal]\r\n})\r\nexport class MapComponent extends OnInit {\r\n \r\n  \r\n    // GET DATA FROM FIREBASE\r\n    items: FirebaseListObservable<any[]>;\r\n    config: FirebaseListObservable<any[]>;\r\n    categories: FirebaseListObservable<any[]>;\r\n\r\n\r\n    map: any;\r\n    waitingForPoint : boolean = false;\r\n    guideTxt : string;\r\n    markers : any[];\r\n    modal: any;\r\n    kuva: any;\r\n    test: any;\r\n    dialog: MdlDialogReference;\r\n    TMP_currentMarkerLocation: any; // Tmp save clicked location here and wait for confirm\r\n    new_targets : any[]; // Stores data for all the new location, this is pushed to Firebase once 'Save' is pushed\r\n    afs: any;\r\n    wholedatabase: any;\r\n\r\n    // FORM DATA\r\n    target_category: string;\r\n    target_name: string;\r\n    target_info: string;\r\n    target_img: any;\r\n    target_video: any;\r\n    target_latitude: string;\r\n    target_longitude: string;\r\n    target_previewDistance: any;\r\n    storageRef: any;\r\n\r\n\r\n    constructor(modal: ModalComponent, @Inject(FirebaseApp) firebaseApp: any, af: AngularFire, private dialogService: MdlDialogService,\r\n    private snackbarService: MdlSnackbarService,private googleMapsService : googleMapsService,\r\n    private gMapsServ : googleMapsServiceFinal){\r\n        super();\r\n        this.afs = af;\r\n        this.items = af.database.list('/geopark_dev/');\r\n        this.config = af.database.list('/geopark_dev/config');\r\n        this.categories = af.database.list('/geopark_dev/config/Kategoriat');\r\n        this.modal = modal; \r\n        this.new_targets = []; \r\n        this.storageRef = firebaseApp.storage().ref();\r\n        this.wholedatabase = firebaseApp.database().ref();\r\n      }\r\n\r\n \r\n\r\n      \r\n    public ngOnInit() {\r\n\r\n       var mapProp = {\r\n              center: new google.maps.LatLng(51.508742, -0.120850),\r\n              zoom: 5,\r\n              mapTypeId: google.maps.MapTypeId.ROADMAP\r\n          };\r\n\r\n         this.map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\r\n         let map = this.map;\r\n         let SLPLayer = this.gMapsServ.getSLPlayer(map);\r\n         this.map.overlayMapTypes.push(SLPLayer);\r\n         this.gMapsServ.addMarkerToMap(map,this);\r\n         this.config.subscribe(x => {\r\n            for(var i=0; i<x.length; i++)\r\n            {\r\n                if(x[i].$key == \"notifikaatio_etaisyys\")\r\n                    this.target_previewDistance = x[i].$value;\r\n            }\r\n        });\r\n    }\r\n\r\n    public onDialogShow(){\r\n\r\n    }\r\n\r\n    public onDialogHide(){\r\n\r\n    }\r\n\r\n   \r\n    \r\n\r\n    public closeDialog(){\r\n\r\n    }\r\n\r\n    public addMarker(location) {\r\n      // Jos \"Tee uusi kohde\"-nappia painettu\r\n      if(this.waitingForPoint == true){\r\n        document.getElementById(\"open\").click();\r\n        this.modal.onDialogShow();\r\n        // this.markers.push(marker);\r\n        this.TMP_currentMarkerLocation = location;\r\n\r\n        // Show coordinates\r\n        this.target_latitude = location.lat();\r\n        this.target_longitude = location.lng();\r\n      }\r\n    }\r\n    \r\n    public SaveNewLocationInfo()\r\n    {\r\n\r\n        if(this.target_category == undefined){\r\n          alert(\"Anna kategoria.\");\r\n          return;\r\n        }\r\n\r\n        // Get data from the form and push to new_targets\r\n        this.new_targets.push(\r\n            {\r\n                category :       this.target_category,\r\n                name :           this.target_name,\r\n                info:            this.target_info,\r\n                img:             \"KUVA\",\r\n                video:           \"VIDEO\",\r\n                previewDistance: this.target_previewDistance,\r\n                latitude:        this.TMP_currentMarkerLocation.lat(),\r\n                longitude:       this.TMP_currentMarkerLocation.lng()\r\n            }\r\n        );\r\n\r\n        document.getElementById(\"closeBtn\").click();\r\n        var marker = new google.maps.Marker({\r\n          position: this.TMP_currentMarkerLocation,\r\n          map: this.map\r\n        });\r\n    }\r\n\r\n    public FinalSave()\r\n    {\r\n      //let lol = this.afs.database.list('/geopark_dev/Kohteet/Puut/');\r\n      let lol = this.afs.database.list('/geopark_dev/Kohteet/');\r\n    \r\n      //TODO\r\n      //let exists = this.afs.database.list('/geopark_dev/Kohteet/Puut/paskaaon');\r\n      var file = document.getElementById('filetoUpload');\r\n      //this.afs.database.ref('/geopark_dev/Kohteet/puut/').set(this.new_targets);\r\n\r\n      for(let i=0; i<this.new_targets.length; i++)\r\n      {\r\n        let subFolder = this.new_targets[i].category + \"/\";\r\n    \r\n        delete this.new_targets[i].category; \r\n        let name = this.new_targets[i].name;\r\n        let targets = this.new_targets;\r\n        let ref =  this.storageRef;\r\n        let test = this.wholedatabase;\r\n        let databaseref = this.afs.database.list('/geopark_dev/Kohteet/'+subFolder);\r\n       \r\n         if(this.target_video) {\r\n            this.storageRef.child(name+\"_image\").put(this.target_img).then(function(snapshot) {    \r\n             targets[i].img = snapshot.downloadURL;\r\n            });\r\n            this.storageRef.child(name+\"_vid\").put(this.target_video).then(function(snapshot){\r\n               targets[i].video = snapshot.downloadURL;\r\n               databaseref.push(targets[i]);\r\n            });\r\n         }\r\n         else {\r\n           this.storageRef.child(name+\"_image\").put(this.target_img).then(function(snapshot) {    \r\n             targets[i].img = snapshot.downloadURL;\r\n             databaseref.push(targets[i]);\r\n            });\r\n         }\r\n      }\r\n       \r\n      this.new_targets = [];\r\n    }\r\n\r\n    public readFile(event) {\r\n      let kuva = this.kuva; \r\n      if (event.target.files && event.target.files[0]) {\r\n        var FR= new FileReader();\r\n        FR.onload = function(e:any) {\r\n          kuva = e.target.result;\r\n        };       \r\n        FR.readAsDataURL( event.target.files[0] );\r\n      }\r\n    }\r\n\r\n\r\n    onChange(event: EventTarget) {\r\n        let eventObj: MSInputMethodContext = <MSInputMethodContext> event;\r\n        let target: HTMLInputElement = <HTMLInputElement> eventObj.target;\r\n        let files: FileList = target.files;\r\n        this.target_img = files[0];\r\n        console.log(this.target_img);\r\n    }\r\n\r\n    onVideoChange(event: EventTarget) {\r\n        let eventObj: MSInputMethodContext = <MSInputMethodContext> event;\r\n        let target: HTMLInputElement = <HTMLInputElement> eventObj.target;\r\n        let files: FileList = target.files;\r\n        this.target_video = files[0];\r\n        console.log(this.target_video);\r\n    }\r\n\r\n    \r\n\r\n    public UusiKohde(text){\r\n     // this.showDialog();\r\n\r\n      this.guideTxt = \"Valitse piste kartalta!\";\r\n      this.waitingForPoint = true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n  \n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/map/map.component.ts","import { MdlDialogService,\r\n  MdlDialogReference,MdlSnackbarService,IOpenCloseRect } from 'angular2-mdl';\r\nimport { Overlay } from 'angular2-modal';\r\nimport { ReactiveFormsModule,Validator,FormControl } from '@angular/forms';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewContainerRef,\r\n  HostListener \r\n} from '@angular/core';\r\n\r\n @Component({\r\n    selector: 'Modal',\r\n    template: require('./modal.component.html')\r\n  })\r\n  export class ModalComponent {\r\n\r\n    kuva: any;\r\n\r\n    constructor( private dialogService: MdlDialogService,\r\n    private snackbarService: MdlSnackbarService) {\r\n    }\r\n\r\n    public savePoint(){\r\n      console.log(this.kuva);\r\n    }  \r\n\r\n    public readFile(event) {\r\n      let kuva = this.kuva; \r\n      if (event.target.files && event.target.files[0]) {\r\n        var FR= new FileReader();\r\n        FR.onload = function(e:any) {\r\n          kuva = e.target.result;\r\n        };       \r\n        FR.readAsDataURL( event.target.files[0] );\r\n      }\r\n    }\r\n\r\n\r\n\r\n    public onDialogShow(dialogRef){\r\n      console.log(\"OK\");\r\n    }\r\n\r\n    public onDialogHide(){\r\n      console.log(\"closed\");\r\n    }\r\n\r\n    public login() {\r\n    //  console.log('login', this.dialog);\r\n    //  this.dialog.hide();\r\n    }\r\n   public cancel(dialog: any){\r\n    dialog.hide();\r\n    }\r\n\r\n   \r\n  }\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/map/Modal/modal.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'no-content',\r\n  template: `\r\n    <div>\r\n      <h1>404: page missing</h1>\r\n    </div>\r\n  `\r\n})\r\nexport class NoContentComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/no-content/no-content.component.ts","import {AngularFire, FirebaseListObservable} from 'angularfire2';\r\nimport {googleMapsService} from '../map/googleMaps.service';\r\nimport { Overlay } from 'angular2-modal';\r\nimport {googleMapsServiceFinal} from '../../googleMapsService';\r\n\r\n\r\nimport { MdlDialogService,\r\n  MdlDialogReference,MdlSnackbarService,IOpenCloseRect } from 'angular2-mdl';\r\nimport {\r\n  Component,\r\n  NgZone,\r\n  OnInit,\r\n  ViewContainerRef \r\n} from '@angular/core';\r\n\r\nimport {\r\n  AgmCoreModule\r\n} from 'angular2-google-maps/core';\r\n/*\r\n * We're loading this component asynchronously\r\n * We are using some magic with es6-promise-loader that will wrap the module with a Promise\r\n * see https://github.com/gdi2290/es6-promise-loader for more info\r\n */\r\n\r\n@Component({\r\n  selector: 'polku',\r\n  template: require('./polku.component.html'),\r\n  styles: [require('./polku.component.css')],\r\n  providers: [googleMapsService,googleMapsServiceFinal]\r\n})\r\nexport class PolkuComponent extends OnInit {\r\n\r\n  \r\n    // GET DATA FROM FIREBASE\r\n    spots: FirebaseListObservable<any[]>; \r\n    allSpotsLink: FirebaseListObservable<any[]>; \r\n    categories: FirebaseListObservable<any[]>; \r\n\r\n    spotList: any[];\r\n    lastSelectedSpot: string;\r\n    existingSpotMarkers: any[]; // names of all visible markers (to prevent duplicates)\r\n    route: any[];\r\n\r\n    tmpSpots: any[];\r\n    allSpots: any[];\r\n    activeCategory: any;\r\n\r\n    map: any;\r\n    guideTxt : string;\r\n    markers : any[];\r\n    dialog: MdlDialogReference;\r\n    afs: any;\r\n\r\n    route_name: any;\r\n    route_category: any;\r\n    route_info: any;\r\n\r\n\r\n    currentlySelectedSpotData: any[];\r\n\r\n    constructor(af: AngularFire,   private gMapsServ : googleMapsServiceFinal,\r\n                googleMapsService : googleMapsService, public zone:NgZone){\r\n\r\n        super();\r\n        this.afs = af;\r\n\r\n        this.spotList = [];\r\n        this.route = [];\r\n\r\n        this.allSpotsLink = af.database.list('/geopark_dev/Kohteet');\r\n        this.categories = af.database.list('/geopark_dev/config/Reitit_Kategoriat');\r\n    }\r\n\r\n \r\n    public ngOnInit() { \r\n        let gMapsServ = this.gMapsServ;\r\n        let map = gMapsServ.initMap();\r\n        this.map = map;\r\n        let SLPLayer = this.gMapsServ.getSLPlayer(map);\r\n        this.map.overlayMapTypes.push(SLPLayer);\r\n        this.allSpots = [];\r\n        let allSpots = this.allSpots;\r\n        let AddSpotToRoute = this.AddSpotToRoute;\r\n        let route = this.route;\r\n        let zone = this.zone;\r\n        let af = this.afs;\r\n\r\n        this.gMapsServ.centerMapToLocation(map); \r\n        \r\n         af.database.list('/geopark_dev/Kohteet').subscribe(_content => {\r\n\r\n           \r\n            _content.map(function(_categories)\r\n            {\r\n              \r\n\r\n                for(var key in _categories)\r\n                {\r\n                    \r\n                    if(_categories[key].latitude != undefined)\r\n                    {\r\n\r\n                        let marker = gMapsServ.createRouteAddMarker(key,_categories);\r\n                        let infowindow = gMapsServ.createRouteAddInfoWindow(key,_categories);\r\n\r\n                        marker.addListener('click', function() {\r\n\r\n                            // CLOSE ALL OLD INFOWINDOWS BEFORE OPENING NEW ONE!\r\n                            infowindow.open(map, this);\r\n\r\n                            let id = this.id;\r\n                            let category = this.category;\r\n                            let name = this.name;\r\n                            let img = this.img;\r\n                            let info = this.info;\r\n\r\n                            document.getElementById('btn_addToRoute').onclick = function(){\r\n                                let kusi = AddSpotToRoute(route, id, category, name, img, info);\r\n                                infowindow.close();\r\n                                zone.run(() => route = kusi);\r\n                            }\r\n                        });\r\n\r\n                        allSpots.push(marker);\r\n                    }\r\n                }\r\n                var markerCluster = new MarkerClusterer(map, allSpots,\r\n                {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});\r\n            });\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    public CategoryChange()\r\n    {\r\n        this.spotList = []; // clear old data\r\n        this.spots = this.afs.database.list('/geopark_dev/Kohteet/' + this.activeCategory);\r\n\r\n        this.spots.subscribe(x => {\r\n\r\n            this.tmpSpots = x;\r\n\r\n            let spotList = this.spotList;\r\n\r\n            this.tmpSpots.map(function(value)\r\n            {\r\n                spotList[value.$key] = value; // Can search spotList[\"Hiisikivi\"].info\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    public AddSpotToRoute(_route, _id, _category, _name, _img, _info)\r\n    {\r\n        _route.push(\r\n            {id: _id, category: _category, name: _name, img: _img, info: _info}\r\n        );\r\n\r\n        return _route;\r\n    }\r\n\r\n    public SaveRoute()\r\n    {\r\n          this.afs.database.list(\"/geopark_dev/Reitit/\" + this.route_category + \"/\").\r\n          update(this.route_name+\"/\" ,{Pisteet: this.route, Nimi: this.route_name, Info: this.route_info});\r\n        \r\n    }\r\n    \r\n    public SpotSelect()\r\n    {\r\n        var marker = new google.maps.Marker({\r\n            position: new google.maps.LatLng(this.spotList[this.lastSelectedSpot].latitude, this.spotList[this.lastSelectedSpot].longitude),\r\n            map: this.map\r\n        });\r\n    }\r\n\r\n    public RemoveSpotFromRoute(i)\r\n    {\r\n       this.route.splice(i,1);\r\n    }\r\n\r\n}\r\n\r\n\r\n  \n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/polku/polku.component.ts","import {AngularFire, FirebaseListObservable} from 'angularfire2';\r\nimport {MdlDialogModule, MdlSnackbaModule,MdlDialogReference} from 'angular2-mdl';\r\nimport { Overlay } from 'angular2-modal';\r\nimport {ModalComponent} from './Modal/modal';\r\n\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewContainerRef,\r\n  ViewEncapsulation \r\n} from '@angular/core';\r\n\r\nimport {\r\n  AgmCoreModule\r\n} from 'angular2-google-maps/core';\r\n/*\r\n * We're loading this component asynchronously\r\n * We are using some magic with es6-promise-loader that will wrap the module with a Promise\r\n * see https://github.com/gdi2290/es6-promise-loader for more info\r\n */\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'secure',\r\n  template: require('./secure.component.html'),\r\n  styles: [require('./secure.component.css')],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SecureComponent extends OnInit {\r\n \r\n  \r\n\r\n \r\n    public ngOnInit() { \r\n\r\n       \r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/secure.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgmCoreModule } from 'angular2-google-maps/core';\r\nimport { routes } from './map.routes';\r\nimport { MapComponent } from './map.component';\r\nimport { MdlModule } from 'angular2-mdl';\r\nimport {ModalComponent} from './Modal/modal.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\nconsole.log('`Barrel` bundle loaded asynchronously');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // Components / Directives/ Pipes\r\n    MapComponent,\r\n    ModalComponent\r\n\r\n   \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MdlModule,\r\n    NgbModule,\r\n   \r\n    ReactiveFormsModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyB9ZP_cBqTRe2cMhbqKqWCPBnbBoflO4Cc'\r\n    })\r\n  ],\r\n  entryComponents : [\r\n  ModalComponent\r\n  ],\r\n  exports : [\r\n  MapComponent]\r\n \r\n})\r\nexport class MapModule {\r\n  public static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/map/map.module.ts","import { MapComponent } from './map.component';\r\n\r\nexport const routes = [\r\n\r\n  { path: '', children: [\r\n  { path: '', component: MapComponent }\r\n   \r\n  ]},\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/map/map.routes.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgmCoreModule } from 'angular2-google-maps/core';\r\nimport { routes } from './secure.routes';\r\nimport { SecureComponent } from './secure.component';\r\nimport { NoContentComponent } from './no-content/no-content.component';\r\nimport { PolkuComponent } from './polku/polku.component';\r\nimport { MapModule } from './map/map.module';\r\nimport { MdlModule } from 'angular2-mdl';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\nconsole.log('`Barrel` bundle loaded asynchronously');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // Components / Directives/ Pipes\r\n    SecureComponent,\r\n    NoContentComponent,\r\n    PolkuComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MdlModule,\r\n    MapModule,\r\n    NgbModule,\r\n    RouterModule.forChild(routes),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyB9ZP_cBqTRe2cMhbqKqWCPBnbBoflO4Cc'\r\n    })\r\n  ],\r\n})\r\nexport class SecureModule {\r\n  public static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/secure.module.ts","import { SecureComponent } from './secure.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { PolkuComponent } from './polku/polku.component';\r\nimport { NoContentComponent } from './no-content/no-content.component';\r\nexport const routes = [\r\n    { path: '', children: [\r\n    { path: '', component: SecureComponent, children: [\r\n    \t { path: 'map', component: MapComponent },\r\n    \t { path: 'polku', component: PolkuComponent },\r\n    \t { path: '**', component: NoContentComponent}\r\n    ] },\r\n  ]},\r\n    { path: 'test',  component: MapComponent },\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/ng-router-loader?{\"loader\":\"async-system\",\"genDir\":\"compiled\",\"aot\":false}!./src/app/secure/secure.routes.ts","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".sebm-google-map-container {\\r\\n  height: 300px;\\r\\n}\\r\\n\\r\\n/* -------------------- Select Box Styles: stackoverflow.com Method */\\r\\n/* -------------------- Source: http://stackoverflow.com/a/5809186 */\\r\\nselect.selectbox, select#selectbox-color {\\r\\n   -webkit-appearance: button;\\r\\n   -webkit-border-radius: 2px;\\r\\n   -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\\r\\n   -webkit-padding-end: 20px;\\r\\n   -webkit-padding-start: 2px;\\r\\n   -webkit-user-select: none;\\r\\n   background-image: url(http://i62.tinypic.com/15xvbd5.png);\\r\\n   background-position: 97% center;\\r\\n   background-repeat: no-repeat;\\r\\n   /*border: 1px solid #AAA;*/\\r\\n   color: rgb(225,225,225);\\r\\n   font-size: inherit;\\r\\n   /*margin: 20px;*/\\r\\n   margin: 20px 0px;\\r\\n   overflow: hidden;\\r\\n   padding: 5px 10px;\\r\\n   text-overflow: ellipsis;\\r\\n   white-space: nowrap;\\r\\n   width: 100%;\\r\\n}\\r\\n\\r\\nselect#selectbox-color {\\r\\n   color: #fff;\\r\\n   background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#779126, #779126 40%, #779126);\\r\\n   background-color: #779126;\\r\\n   -webkit-border-radius: 20px;\\r\\n   -moz-border-radius: 20px;\\r\\n   border-radius: 20px;\\r\\n   padding-left: 15px;\\r\\n}\\r\\n\\r\\n.uploadthisFILE::-webkit-file-upload-button {\\r\\n   background: rgb(63,81,181);\\r\\n   color: white;\\r\\n   border-radius: 5px;\\r\\n   margin: 3px, 3px, 3px, 0;\\r\\n   font-size: 125%;\\r\\n   border: none;\\r\\n   box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12);\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/secure/map/map.component.css\n// module id = 997\n// module chunks = 1","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".sebm-google-map-container {\\r\\n  height: 300px;\\r\\n}\\r\\n\\r\\n/* -------------------- Select Box Styles: stackoverflow.com Method */\\r\\n/* -------------------- Source: http://stackoverflow.com/a/5809186 */\\r\\nselect.selectbox, select#selectbox-color {\\r\\n   -webkit-appearance: button;\\r\\n   -webkit-border-radius: 2px;\\r\\n   -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\\r\\n   -webkit-padding-end: 20px;\\r\\n   -webkit-padding-start: 2px;\\r\\n   -webkit-user-select: none;\\r\\n   background-image: url(http://i62.tinypic.com/15xvbd5.png);\\r\\n   background-position: 97% center;\\r\\n   background-repeat: no-repeat;\\r\\n   /*border: 1px solid #AAA;*/\\r\\n   color: #000;\\r\\n   font-size: inherit;\\r\\n   /*margin: 20px;*/\\r\\n   margin: 20px 0px;\\r\\n   overflow: hidden;\\r\\n   padding: 5px 10px;\\r\\n   text-overflow: ellipsis;\\r\\n   white-space: nowrap;\\r\\n   width: 100%;\\r\\n}\\r\\n\\r\\nselect#selectbox-color {\\r\\n   color: #fff;\\r\\n   background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#779126, #779126 40%, #779126);\\r\\n   background-color: #779126;\\r\\n   -webkit-border-radius: 20px;\\r\\n   -moz-border-radius: 20px;\\r\\n   border-radius: 20px;\\r\\n   padding-left: 15px;\\r\\n}\\r\\n\\r\\n.mdl-button--icon {\\r\\n   background-color: rgb(255,64,129);\\r\\n   color: #fff;\\r\\n   border-radius: 50%;\\r\\n    font-size: 10px;\\r\\n    height: 20px;\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n    min-width: 20px;\\r\\n    width: 20px;\\r\\n    padding: 2px;\\r\\n    overflow: hidden;\\r\\n    line-height: normal;\\r\\n}\\r\\n\\r\\n#remove {\\r\\n   font-size: 15px;\\r\\n   background-color: inherit;\\r\\n}\\r\\n\\r\\n#googleMap {\\r\\n   background-color: #000;\\r\\n}\\r\\n\\r\\n.mdl-card__title .mdl-card__title_text {\\r\\n   font-family: 'Open Sans Condensed', sans-serif;\\r\\n   font-size: 22px;\\r\\n   font-weight: 400;\\r\\n   padding: 10px;\\r\\n   background-color: #000;\\r\\n   color: white;\\r\\n   border-radius: 2px, 2px, 0 , 0;\\r\\n}\\r\\n\\r\\n#route_name, #label_category, #select_category, #mdl-textfield__input {\\r\\n   margin-left: 5px;\\r\\n   width: 98%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/secure/polku/polku.component.css\n// module id = 998\n// module chunks = 1","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/secure/secure.component.css\n// module id = 999\n// module chunks = 1"],"mappings":";;;;;AAAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;;;;;;;;;ACHA;AAGA;AAAA;AAuIA;AArrIA;AAAA;;AAAA;AAwIA;AAAA;;;;;;;;;;;AC1IA;AAGA;AAAA;AA4CA;AA1CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AA5CA;AAAA;;AAAA;AA6CA;AAAA;;;;;;;;;;;AC/CA;AACA;AACA;AAEA;AAEA;AAEA;AAUA;;;;AAIA;AAWA;AAAA;AAkCA;AAGA;AAHA;AACA;AAAA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAzBA;;AA0BA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AAtNA;AAAA;AACA;AACA;AACA;AACA;AACA;AAmCA;;AAnCA;AAoNA;AAAA;;;;;;;;;;;;;;;;ACpPA;AAIA;AAWA;AAIA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;AACA;AACA;AACA;;AAAA;AA2CA;AAAA;;;;;;;;;;;;ACzDA;AAUA;AAAA;AAEA;AAVA;AAAA;AACA;AACA;AAKA;;AAAA;AAGA;AAAA;;;;;;;;;;;ACZA;AACA;AAEA;AAKA;AAUA;;;;AAIA;AAQA;AAAA;AA8BA;AAGA;AAHA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAIA;AAGA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AA5BA;;AA6BA;AACA;AAEA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAIA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AA7JA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA0JA;AAAA;;;;;;;;;;;;;;AClLA;AAUA;;;;AAIA;AAWA;AAAA;AAAA;AAAA;AAeA;AAVA;AAGA;AAdA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAgBA;AAAA;;;;;;;;;;;AC7CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AA4BA;AAAA;AAEA;AADA;AA3BA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAAA;AAGA;AAAA;;;;;;;;;;;;;;;;;;;;AC3CA;AAEA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAqBA;AAAA;AAEA;AADA;AApBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;","sourceRoot":""}